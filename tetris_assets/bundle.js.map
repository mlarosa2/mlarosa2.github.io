{"version":3,"sources":["webpack:///webpack/bootstrap 94566251ca46aeab9aff","webpack:///./tetris_assets/js/tetris.js","webpack:///./tetris_assets/js/game.js","webpack:///./tetris_assets/js/board.js","webpack:///./tetris_assets/js/pieces/square.js","webpack:///./tetris_assets/js/pieces/piece.js","webpack:///./tetris_assets/js/pieces/color_constants.js","webpack:///./tetris_assets/js/pieces/line.js","webpack:///./tetris_assets/js/pieces/left_l.js","webpack:///./tetris_assets/js/pieces/right_l.js","webpack:///./tetris_assets/js/pieces/left_z.js","webpack:///./tetris_assets/js/pieces/right_z.js","webpack:///./tetris_assets/js/pieces/t.js","webpack:///./tetris_assets/js/game_view.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,EAAC;;;;;;;ACzyH,uBAAuB;AAChJ,IAAG;AACH,wGAAuG,uBAAuB;AAC9H;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wHAAuH,uBAAuB;AAC9I;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB,2BAA2B;AAC5C;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;AC3OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAiB,2BAA2B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAiB,6BAA6B;AAC9C;AACA,oBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,sBAAqB,QAAQ;AAC7B;AACA;AACA,wBAAuB,2BAA2B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4BAA2B,QAAQ;AACnC,wBAAuB,QAAQ;AAC/B;AACA;AACA;AACA,4BAA2B,2BAA2B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;;;;;;;AChKA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA,sBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA,sBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,0BAA0B;AACjD;AACA;AACA;AACA;AACA,wBAAuB,0BAA0B;AACjD;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,kBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;;AAEA;;AAEA;;;;;;;AC3GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACVA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,0BAA0B;AAC3C,oBAAmB,OAAO;AAC1B;AACA;AACA;;AAEA,kBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,0BAA0B;AAC3C,oBAAmB,OAAO;AAC1B;AACA;AACA;;AAEA,kBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACnMA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,0BAA0B;AAC3C,oBAAmB,OAAO;AAC1B;AACA;AACA;;AAEA,kBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,0BAA0B;AAC3C,oBAAmB,OAAO;AAC1B;AACA;AACA;;AAEA,kBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;;;;;;;AC3LA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,0BAA0B;AAC3C,oBAAmB,OAAO;AAC1B;AACA;AACA;;AAEA,kBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,0BAA0B;AAC3C,oBAAmB,OAAO;AAC1B;AACA;AACA;;AAEA,kBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;;;;;;;AC3LA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,0BAA0B;AAC3C,oBAAmB,OAAO;AAC1B;AACA;AACA;;AAEA,kBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,0BAA0B;AAC3C,oBAAmB,OAAO;AAC1B;AACA;AACA;;AAEA,kBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;;;;;;;AC3LA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,0BAA0B;AAC3C,oBAAmB,OAAO;AAC1B;AACA;AACA;;AAEA,kBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,0BAA0B;AAC3C,oBAAmB,OAAO;AAC1B;AACA;AACA;;AAEA,kBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;;;;;;;AC3LA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,0BAA0B;AAC3C,oBAAmB,OAAO;AAC1B;AACA;AACA;;AAEA,kBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,0BAA0B;AAC3C,oBAAmB,OAAO;AAC1B;AACA;AACA;;AAEA,kBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/HA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,qBAAoB,4BAA4B,EAAE;AAClD;;AAEA;AACA;AACA,mBAAkB,+DAA+D,EAAE;AACnF,IAAG;AACH,mBAAkB,eAAe,EAAE;AACnC,mBAAkB,yBAAyB,EAAE;AAC7C,mBAAkB,4EAA4E,EAAE;AAChG,mBAAkB,6EAA6E,EAAE;AACjG;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 94566251ca46aeab9aff\n **/","const Game     = require('./game');\nconst GameView = require('./game_view');\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const canvas  = document.getElementById('canvas');\n  canvas.width  = Game.DIM_X;\n  canvas.height = Game.DIM_Y;\n  const ctx     = canvas.getContext(\"2d\");\n  const game    = new Game();\n  new GameView(game, ctx).start();\n});\n\nlet mute  = document.getElementById(\"volume\");\nlet audio = document.getElementById(\"theme\");\n\nmute.addEventListener('click', function () {\n  if (!audio.paused) {\n    mute.innerHTML = '<span class=\"fa-stack\"><i class=\"fa fa-music fa-stack-1x\"></i><i class=\"fa fa-ban fa-stack-1x\"></i></span> Unmute</span>'\n    mute.className = 'muted'\n    audio.pause();\n  } else {\n    mute.innerHTML = '<i class=\"fa fa-music\"></i> Mute';\n    mute.className = '';\n    audio.play();\n  }\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./tetris_assets/js/tetris.js\n ** module id = 0\n ** module chunks = 0\n **/","const Board  = require('./board');\nconst Square = require('./pieces/square');\nconst Line   = require('./pieces/line');\nconst LeftL  = require('./pieces/left_l');\nconst RightL = require('./pieces/right_l');\nconst LeftZ  = require('./pieces/left_z');\nconst RightZ = require('./pieces/right_z');\nconst Tee    = require('./pieces/t');\n\nconst NUM_PIECES = 7\n\nconst Game = function () {\n  this.board     = new Board();\n  this.pieces    = [];\n  this.score     = 0;\n  this.paused    = false;\n  this.nextPiece = [];\n  this.score     = 0;\n  this.menu      = 'main';\n};\n\nGame.BG_COLOR         = '#FAFAFA';\nGame.DIM_X            = 300;\nGame.DIM_Y            = 600;\nGame.FALL_RATE        = 2;\nGame.OriginalFallRate = 2;\n\nGame.prototype.togglePause = function () {\n  this.paused = !this.paused;\n};\n\nGame.prototype.renderPausedMenu = function (ctx) {\n  ctx.beginPath();\n  ctx.rect(50, 200, 200, 100 );\n  ctx.fillStyle = Game.BG_COLOR;\n  ctx.fill();\n  ctx.lineWidth = 2;\n  ctx.strokeStyle = 'black';\n  ctx.stroke();\n  ctx.font = \"18px 'Press Start 2P'\";\n  ctx.strokeStyle = 'black';\n  ctx.fillStyle = 'red';\n  ctx.strokeText('PAUSED', 95, 260);\n  ctx.fillText('PAUSED', 95, 260);\n};\n\nGame.prototype.renderGameOverMenu = function (ctx) {\n  ctx.beginPath();\n  ctx.rect(50, 200, 200, 100 );\n  ctx.fillStyle = Game.BG_COLOR;\n  ctx.fill();\n  ctx.lineWidth = 2;\n  ctx.strokeStyle = 'black';\n  ctx.stroke();\n  ctx.font = \"18px 'Press Start 2P'\";\n  ctx.strokeStyle = 'black';\n  ctx.fillStyle = 'red';\n  ctx.strokeText('Game Over', 67, 250);\n  ctx.fillText('Game Over', 67, 250);\n  ctx.font = \"8px 'Press Start 2P'\";\n  ctx.fillStyle = 'black';\n  ctx.fillText('Press \"r\" to replay.', 73, 275);\n};\n\nGame.prototype.renderMainMenu = function (ctx) {\n  if (this.menu !== \"main\") return;\n  ctx.beginPath();\n  ctx.rect(50, 200, 200, 150);\n  ctx.fillStyle = Game.BG_COLOR;\n  ctx.fill();\n  ctx.lineWidth = 2;\n  ctx.strokeStyle = 'black';\n  ctx.stroke();\n  ctx.font = \"18px 'Press Start 2P'\";\n  ctx.strokeStyle = 'black';\n  ctx.fillStyle = 'red';\n  ctx.strokeText('TETЯIS.JS', 70, 250);\n  ctx.fillText('TETЯIS.JS', 70, 250);\n  ctx.font = \"8px 'Press Start 2P'\";\n  ctx.fillStyle = 'black';\n  ctx.fillText('Press \"s\" to start.', 83, 275);\n  ctx.fillText('wasd - direction', 90, 300);\n  ctx.fillText('q/e - rotate left/right', 58, 325);\n};\n\nGame.prototype.removeMainMenu = function () {\n  this.menu = 'play';\n  document.getElementById('next-image').style.opacity = 1;\n};\n\nGame.prototype.randomPiece = function () {\n  const choose = Math.floor(Math.random() * NUM_PIECES + 1);\n  switch (choose) {\n    case 1:\n      return new Square(this.board);\n      break;\n    case 2:\n      return new Line(this.board);\n      break;\n    case 3:\n      return new LeftL(this.board);\n      break;\n    case 4:\n      return new RightL(this.board);\n      break;\n    case 5:\n      return new LeftZ(this.board);\n      break;\n    case 6:\n      return new RightZ(this.board);\n      break;\n    case 7:\n      return new Tee(this.board);\n      break;\n  }\n};\n\nGame.prototype.addPiece = function () {\n  let piece = this.nextPiece.shift();\n  this.nextPiece.push(this.randomPiece());\n  if (this.menu === 'main') {\n    document.getElementById('next-piece').innerHTML = `<img id=\"next-image\" style=\"opacity:0\" src=\"./tetris_assets/img/${this.nextPiece[0].name}.png\">`;\n  } else {\n    document.getElementById('next-piece').innerHTML = `<img id=\"next-image\" src=\"./tetris_assets/img/${this.nextPiece[0].name}.png\">`;\n  }\n  this.pieces.push(piece);\n};\n\nGame.prototype.setNextPiece = function () {\n  this.nextPiece.push(this.randomPiece());\n};\n\nGame.prototype.hideNextPiece = function () {\n  document.getElementById('next-piece').innerHTML = `<img id=\"next-image\" style=\"opacity:0\" src=\"./tetris_assets/img/${this.nextPiece[0].name}.png\">`\n};\n\nGame.prototype.draw = function (ctx) {\n  ctx.clearRect(0, 0, Game.DIM_X, Game.DIM_Y);\n  ctx.fillStyle = Game.BG_COLOR;\n  ctx.fillRect(0, 0, Game.DIM_X, Game.DIM_Y);\n\n  if (this.menu === 'main') {\n    this.renderMainMenu(ctx);\n  }\n\n  this.pieces.forEach( piece => {\n    piece.draw(ctx);\n  });\n\n  if (this.paused) {\n    this.renderPausedMenu(ctx);\n  }\n\n  if (this.menu === 'over') {\n    this.hideNextPiece();\n    this.renderGameOverMenu(ctx);\n  }\n};\n\nGame.prototype.setScore = function () {\n  let scoreTag       = document.getElementById('score');\n  scoreTag.innerHTML = this.score;\n  this.increaseFallRate();\n};\n\nGame.prototype.increaseFallRate = function () {\n  if (this.score % 2500 === 0 && this.score !== 0) {\n    Game.FALL_RATE += 1;\n    Game.OriginalFallRate += 1;\n  }\n}\n\nGame.prototype.movePiece = function (delta) {\n  const piece = this.pieces[this.pieces.length - 1];\n  const board = this.board;\n  for (let i = 0; i < piece.location.length; i++) {\n    if (this.paused || this.menu === 'main' || this.menu === 'over') {\n      Game.FALL_RATE = 0;\n    } else {\n      Game.FALL_RATE = Game.OriginalFallRate;\n    };\n    piece.location[i][1] += Game.FALL_RATE;\n  }\n};\n\nGame.prototype.checkForGameOver = function () {\n  if (this.board.isOver()) {\n    this.menu = 'over';\n  }\n};\n\nGame.prototype.reset = function (ctx) {\n  this.menu             = 'replay';\n  this.pieces           = [];\n  Game.FALL_RATE        = 2;\n  Game.OriginalFallRate = 2;\n  this.score            = 0;\n  this.nextPiece        = [];\n  this.setScore();\n  this.board.reset();\n};\n\nGame.prototype.step = function (delta, ctx) {\n  if (this.menu === 'replay') {\n    this.draw(ctx);\n    this.menu = 'play';\n  }\n  const lastPiece = this.pieces[this.pieces.length - 1];\n  if (this.pieces.length == 0) {\n    this.setNextPiece();\n    this.addPiece();\n  } else {\n    if (this.pieces.length > 0 && !this.board.isNextRowSet(lastPiece)) {\n      this.movePiece(delta);\n    } else {\n      this.checkForGameOver();\n      if (this.menu !== 'over') {\n        this.board.addPiece(lastPiece);\n        this.addPiece();\n      }\n      if (this.menu === 'over') {\n        this.movePiece(delta);\n      }\n      let fullRows = this.board.checkForFullRow();\n      if (Object.keys(fullRows).length > 0) {\n        this.score += Object.keys(fullRows).length * 100;\n        if (Object.keys(fullRows).length === 4) this.score += 400;\n        this.setScore();\n        this.board.clearRows(fullRows, ctx, Game.DIM_X, Game.BG_COLOR);\n      }\n    }\n  }\n};\n\n\nmodule.exports = Game;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./tetris_assets/js/game.js\n ** module id = 1\n ** module chunks = 0\n **/","let boardAsArray = [\n// 0   1   2   3   4   5   6   7   8    9\n  [[], [], [], [], [], [], [], [], [], []], // 0\n  [[], [], [], [], [], [], [], [], [], []], // 1\n  [[], [], [], [], [], [], [], [], [], []], // 2\n  [[], [], [], [], [], [], [], [], [], []], // 3\n  [[], [], [], [], [], [], [], [], [], []], // 4\n  [[], [], [], [], [], [], [], [], [], []], // 5\n  [[], [], [], [], [], [], [], [], [], []], // 6\n  [[], [], [], [], [], [], [], [], [], []], // 7\n  [[], [], [], [], [], [], [], [], [], []], // 8\n  [[], [], [], [], [], [], [], [], [], []], // 9\n  [[], [], [], [], [], [], [], [], [], []], // 10\n  [[], [], [], [], [], [], [], [], [], []], // 11\n  [[], [], [], [], [], [], [], [], [], []], // 12\n  [[], [], [], [], [], [], [], [], [], []], // 13\n  [[], [], [], [], [], [], [], [], [], []], // 14\n  [[], [], [], [], [], [], [], [], [], []], // 15\n  [[], [], [], [], [], [], [], [], [], []], // 16\n  [[], [], [], [], [], [], [], [], [], []], // 17\n  [[], [], [], [], [], [], [], [], [], []], // 18\n  [[], [], [], [], [], [], [], [], [], []], // 19\n  [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]\n];\n\n\nconst Board = function () {\n  this.over = false;\n}\n\nBoard.prototype.isOver = function () {\n  return this.over;\n};\n\nBoard.prototype.reset = function () {\n  this.over = false;\n  boardAsArray = [\n  // 0   1   2   3   4   5   6   7   8    9\n    [[], [], [], [], [], [], [], [], [], []], // 0\n    [[], [], [], [], [], [], [], [], [], []], // 1\n    [[], [], [], [], [], [], [], [], [], []], // 2\n    [[], [], [], [], [], [], [], [], [], []], // 3\n    [[], [], [], [], [], [], [], [], [], []], // 4\n    [[], [], [], [], [], [], [], [], [], []], // 5\n    [[], [], [], [], [], [], [], [], [], []], // 6\n    [[], [], [], [], [], [], [], [], [], []], // 7\n    [[], [], [], [], [], [], [], [], [], []], // 8\n    [[], [], [], [], [], [], [], [], [], []], // 9\n    [[], [], [], [], [], [], [], [], [], []], // 10\n    [[], [], [], [], [], [], [], [], [], []], // 11\n    [[], [], [], [], [], [], [], [], [], []], // 12\n    [[], [], [], [], [], [], [], [], [], []], // 13\n    [[], [], [], [], [], [], [], [], [], []], // 14\n    [[], [], [], [], [], [], [], [], [], []], // 15\n    [[], [], [], [], [], [], [], [], [], []], // 16\n    [[], [], [], [], [], [], [], [], [], []], // 17\n    [[], [], [], [], [], [], [], [], [], []], // 18\n    [[], [], [], [], [], [], [], [], [], []], // 19\n    [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]\n  ];\n};\n\nBoard.prototype.isNextRowSet = function (piece) {\n  for (let i = 0; i < piece.location.length; i++) {\n    let column = Math.abs(Math.floor(piece.location[i][0] / 30));\n    let row    = Math.floor(piece.location[i][1] / 30) + 1;\n    column > 9 ? column = 9 : column;\n    row < 0 ? row = 0 : row;\n    if (boardAsArray[row][column].length > 0) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nBoard.prototype.checkForGameOver = function () {\n  return false;\n};\n\nBoard.prototype.getBoard = function () {\n  return boardAsArray;\n};\n\nBoard.prototype.checkForFullRow = function () {\n  const fullRows = {};\n\n  for (let i = 0; i < boardAsArray.length - 1; i++) {\n    let rowFull = true;\n    for (let j = 0; j < boardAsArray[0].length; j++) {\n      if (boardAsArray[i][j].length === 0) {\n        rowFull = false;\n      }\n    }\n    if (rowFull) {\n      fullRows[i] = boardAsArray[i];\n    }\n  }\n\n  return fullRows;\n};\n\nBoard.prototype.clearRows = function (rows, ctx, dim_x, color) {\n  for (let row in rows) {\n    if (rows.hasOwnProperty(row)) {\n      for (let i = 0; i < 10; i++) {\n        let index;\n        let piece = rows[row][i][0];\n        for (let h = 0; h < piece.location.length; h++) {\n          if (piece.location[h][0] === i * 30 && piece.location[h][1] === row * 30) {\n            index = h;\n          }\n        }\n        piece.location.splice(index, 1);\n        rows[row][i] = [];\n      }\n\n      ctx.beginPath();\n      ctx.rect(0, row * 30, dim_x, 30);\n      ctx.fillStyle = color;\n      ctx.fill();\n      ctx.lineWidth = 1;\n      ctx.strokeStyle = color;\n      ctx.stroke();\n\n      for (let j = row - 1; j >= 0; j--) {\n        for (let k = 0; k < 10; k++) {\n          if (boardAsArray[j][k].length > 0) {\n            let piece = boardAsArray[j][k][0];\n            boardAsArray[j][k] = [];\n            for (let l = 0; l < piece.location.length; l++) {\n              if (piece.location[l][0] === k * 30 && piece.location[l][1] === j * 30) {\n                piece.location[l][1] += 30;\n                boardAsArray[j + 1][k] = [piece];\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nBoard.prototype.addPiece = function (piece) {\n  for (let i = 3; i >= 0; i--) {\n    if (piece.location[i][1] < 0) {\n      piece.location.splice(i, 1);\n      this.over = true;\n    }\n  }\n\n  piece.location.forEach( block => {\n    const column = Math.floor(block[0] / 30);\n    const row    = Math.floor(block[1] / 30);\n    block[0]     = column * 30;\n    block[1]     = row * 30;\n    boardAsArray[row][column] = [piece];\n  });\n};\n\nmodule.exports = Board;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./tetris_assets/js/board.js\n ** module id = 2\n ** module chunks = 0\n **/","const Piece          = require('./piece');\nconst colorConstants = require('./color_constants');\n\nconst Square = function (board) {\n  Piece.call(this, board);\n  this.color = colorConstants.RED;\n  this.location = [\n    [150, -60],\n    [120, -60],\n    [150, -90],\n    [120, -90]\n  ];\n  this.name = \"Square\";\n}\n\nfunction Surrogate() {};\nSurrogate.prototype = Piece.prototype;\nSquare.prototype = new Surrogate();\n\nmodule.exports = Square;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./tetris_assets/js/pieces/square.js\n ** module id = 3\n ** module chunks = 0\n **/","const PIECE_SIZE = 30;\nconst MOVES = {\n  LEFT        : \"left\",\n  RIGHT       : \"right\",\n  DOWN        : \"down\",\n  ROTATE_LEFT : \"rotate left\"\n}\nconst Piece = function (board) {\n  this.board    = board.getBoard()\n  this.set      = false;\n  this.color    = null;\n  this.location = [];\n};\nPiece.prototype.move = function(direction) {\n  switch (direction) {\n    case MOVES.RIGHT:\n      for (let j = 0; j < this.location.length; j++) {\n        if (this.location[j][0] >= 270 || this.checkColRight()) {\n          return;\n        }\n      }\n      for (let i = 0; i < this.location.length; i++) {\n        if (this.location[i][0] <= 270) {\n          this.location[i][0] += 30;\n        }\n      }\n    break;\n    case MOVES.LEFT:\n      for (let j = 0; j < this.location.length; j++) {\n        if (this.location[j][0] <= 0 || this.checkColLeft()) {\n          return;\n        }\n      }\n      for (let i = 0; i < this.location.length; i++) {\n        if (this.location[i][0] >= 0) {\n          this.location[i][0] -= 30;\n        }\n      }\n      break;\n      case MOVES.DOWN:\n        for (let j = 0; j < this.location.length; j++) {\n          if (this.location[j][1] <= 0) {\n            return;\n          }\n        }\n        for (let i = 0; i < this.location.length; i++) {\n          this.location[i][1] += 10;\n        }\n        break;\n  }\n},\nPiece.prototype.checkColLeft = function () {\n  for (let i = 0; i < this.location.length; i++) {\n    let columnLeft  = Math.ceil(this.location[i][0] / 30) - 1;\n    let row         = Math.ceil(this.location[i][1] / 30);\n    columnLeft < 0 ? columnLeft = 0 : columnLeft;\n    row < 0 ? row = 0 : row;\n    if (this.board[row][columnLeft].length > 0) {\n      return true;\n    }\n  }\n\n  return false;\n};\nPiece.prototype.isSpaceTaken = function (block) {\n  let column = Math.abs(Math.floor(block[0] / 30));\n  let row    = Math.floor(block[1] / 30);\n  column > 9 ? column = 9 : column;\n  row < 0 ? row = 0 : row;\n\n  if (this.board[row][column].length > 0 || block[0] >= 300 || block[0] < 0) {\n    return true;\n  }\n\n  return false;\n};\nPiece.prototype.checkColRight = function () {\n  for (let i = 0; i < this.location.length; i++) {\n    let columnRight = Math.ceil(this.location[i][0] / 30) + 1;\n    let row         = Math.ceil(this.location[i][1] / 30);\n    columnRight > 9 ? columnRight = 9 : columnRight;\n    row < 0 ? row = 0 : row;\n    if (this.board[row][columnRight].length > 0) {\n      return true;\n    }\n  }\n\n  return false;\n};\nPiece.prototype.draw = function (ctx) {\n  this.location.forEach( block => {\n    ctx.beginPath();\n    ctx.rect(block[0], block[1], PIECE_SIZE, PIECE_SIZE );\n    ctx.fillStyle = this.color;\n    ctx.fill();\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = 'black';\n    ctx.stroke();\n  });\n};\nPiece.prototype.rotateLeft = function (paused) {\n\n};\nPiece.prototype.rotateRight = function(paused) {\n\n};\n\nmodule.exports = Piece;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./tetris_assets/js/pieces/piece.js\n ** module id = 4\n ** module chunks = 0\n **/","const colorConstants = {\n  RED    : '#F00',\n  BLUE   : '#00F',\n  GREEN  : '#0F0',\n  YELLOW : '#FFFF00',\n  PURPLE : '#BF5FFF',\n  ORANGE : '#FFA500',\n  PINK   : '#FF69B4'\n}\n\nmodule.exports = colorConstants;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./tetris_assets/js/pieces/color_constants.js\n ** module id = 5\n ** module chunks = 0\n **/","const Piece          = require('./piece');\nconst colorConstants = require('./color_constants');\n\nconst Line = function (board) {\n  Piece.call(this, board);\n  this.color = colorConstants.BLUE;\n  this.location = [\n    [120, -150],\n    [120, -120],\n    [120, -90],\n    [120, -60]\n  ];\n  this.name = \"Line\"\n}\nfunction Surrogate() {};\nSurrogate.prototype = Piece.prototype;\nLine.prototype = new Surrogate();\nLine.prototype.rotateRight = function(paused) {\n  if (paused) return;\n  const originBlock      = this.location[1];\n  const originalLocation = [[], [], [], []];\n  for (let k = 0; k < this.location.length; k++) {\n    for (let l = 0; l < 2; l++) {\n      originalLocation[k][l] = this.location[k][l];\n    }\n  }\n\n  for (let i = 0; i < this.location.length; i ++) {\n    let rotation;\n    switch (i) {\n      case 1:\n        rotation = 0;\n        break;\n      case 3:\n        rotation = 60;\n        break;\n      default:\n        rotation = 30;\n    }\n\n    //block is above originBlock\n    if (this.location[i][0] === originBlock[0] && this.location[i][1] === originBlock[1] - 30 ) {\n      this.location[i][0] -= rotation;\n      this.location[i][1] += rotation;\n      continue;\n    }\n\n    //block is to left of originBlock\n    if (this.location[i][0] === originBlock[0] - 30 && this.location[i][1] === originBlock[1]) {\n      this.location[i][0] += rotation;\n      this.location[i][1] += rotation;\n      continue;\n    }\n\n    //block is below originBlock\n    if (this.location[i][0] === originBlock[0] && this.location[i][1] === originBlock[1] + 30) {\n      this.location[i][0] += rotation;\n      this.location[i][1] -= rotation;\n      continue;\n    }\n\n    //block is to right of originBlock\n    if (this.location[i][0] === originBlock[0] + 30 && this.location[i][1] === originBlock[1]) {\n      this.location[i][0] -= rotation;\n      this.location[i][1] -= rotation;\n      continue;\n    }\n\n    //DISTANCE BLOCK\n    //==============\n\n    //block is bottom\n    if (this.location[i][0] === originBlock[0] && this.location[i][1] === originBlock[1] + 60) {\n      this.location[i][0] -= rotation\n      this.location[i][1] -= rotation;\n      continue;\n    }\n\n    //block is left\n    if (this.location[i][0] === originBlock[0] - 60 && this.location[i][1] === originBlock[1]) {\n      this.location[i][0] += rotation;\n      this.location[i][1] -= rotation\n      continue;\n    }\n\n    //block is top\n    if (this.location[i][0] === originBlock[0] && this.location[i][1] === originBlock[1] - 60) {\n      this.location[i][0] += rotation;\n      this.location[i][1] += rotation;\n      continue;\n    }\n\n    //block is right\n    if (this.location[i][0] === originBlock[0] + 60 && this.location[i][1] === originBlock[1]) {\n      this.location[i][0] -= rotation;\n      this.location[i][1] += rotation;\n      continue;\n    }\n  }\n\n  for (let j = 0; j < this.location.length; j++) {\n    if (this.isSpaceTaken(this.location[j])) {\n      this.location = originalLocation;\n    }\n  }\n};\nLine.prototype.rotateLeft = function (paused) {\n  if (paused) return;\n  const originBlock      = this.location[1];\n  const originalLocation = [[], [], [], []]\n  for (let k = 0; k < this.location.length; k++) {\n    for (let l = 0; l < 2; l++) {\n      originalLocation[k][l] = this.location[k][l];\n    }\n  }\n\n  for (let i = 0; i < this.location.length; i ++) {\n    let rotation;\n    switch (i) {\n      case 1:\n        rotation = 0;\n        break;\n      case 3:\n        rotation = 60;\n        break;\n      default:\n        rotation = 30;\n    }\n\n    //block is above originBlock\n    if (this.location[i][0] === originBlock[0] && this.location[i][1] === originBlock[1] - 30 ) {\n      this.location[i][0] += rotation;\n      this.location[i][1] += rotation;\n      continue;\n    }\n    //block is to right of originBlock\n    if (this.location[i][0] === originBlock[0] + 30 && this.location[i][1] === originBlock[1]) {\n      this.location[i][0] -= rotation;\n      this.location[i][1] += rotation;\n      continue;\n    }\n\n    //block is below originBlock\n    if (this.location[i][0] === originBlock[0] && this.location[i][1] === originBlock[1] + 30) {\n      this.location[i][0] -= rotation;\n      this.location[i][1] -= rotation;\n      continue;\n    }\n\n    //block is to left of originBlock\n    if (this.location[i][0] === originBlock[0] - 30 && this.location[i][1] === originBlock[1]) {\n      this.location[i][0] += rotation;\n      this.location[i][1] -= rotation;\n      continue;\n    }\n\n    //DISTANCE BLOCK\n    //==============\n\n    //block is bottom\n    if (this.location[i][0] === originBlock[0] && this.location[i][1] === originBlock[1] + 60) {\n      this.location[i][0] += rotation\n      this.location[i][1] -= rotation;\n      continue;\n    }\n\n    //block is right\n    if (this.location[i][0] === originBlock[0] + 60 && this.location[i][1] === originBlock[1]) {\n      this.location[i][0] -= rotation;\n      this.location[i][1] -= rotation\n      continue;\n    }\n\n    //block is top\n    if (this.location[i][0] === originBlock[0] && this.location[i][1] === originBlock[1] - 60) {\n      this.location[i][0] -= rotation;\n      this.location[i][1] += rotation;\n      continue;\n    }\n\n    //block is left\n    if (this.location[i][0] === originBlock[0] - 60 && this.location[i][1] === originBlock[1]) {\n      this.location[i][0] += rotation;\n      this.location[i][1] += rotation;\n      continue;\n    }\n  }\n\n  for (let j = 0; j < this.location.length; j++) {\n    if (this.isSpaceTaken(this.location[j])) {\n      this.location = originalLocation;\n    }\n  }\n};\n\nmodule.exports = Line;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./tetris_assets/js/pieces/line.js\n ** module id = 6\n ** module chunks = 0\n **/","const Piece          = require('./piece');\nconst colorConstants = require('./color_constants');\n\nconst LeftL = function (board) {\n  Piece.call(this, board);\n  this.color = colorConstants.GREEN;\n  this.location = [\n    [120, -120],\n    [120, -90],\n    [120, -60],\n    [90, -60]\n  ];\n  this.name = \"LeftL\";\n}\n\nfunction Surrogate() {};\nSurrogate.prototype = Piece.prototype;\nLeftL.prototype = new Surrogate();\nLeftL.prototype.rotateLeft = function(paused) {\n  if (paused) return;\n  const originBlock      = this.location[1];\n  const originalLocation = [[], [], [], []];\n  for (let k = 0; k < this.location.length; k++) {\n    for (let l = 0; l < 2; l++) {\n      originalLocation[k][l] = this.location[k][l];\n    }\n  }\n\n  for (let i = 0; i < this.location.length; i ++) {\n    let rotation;\n    switch (i) {\n      case 1:\n        rotation = 0;\n        break;\n      case 3:\n        rotation = 60;\n        break;\n      default:\n        rotation = 30;\n    }\n\n    //block is above originBlock\n    if (this.location[i][0] === originBlock[0] && this.location[i][1] === originBlock[1] - 30 ) {\n      this.location[i][0] -= rotation;\n      this.location[i][1] += rotation;\n      continue;\n    }\n\n    //block is to left of originBlock\n    if (this.location[i][0] === originBlock[0] - 30 && this.location[i][1] === originBlock[1]) {\n      this.location[i][0] += rotation;\n      this.location[i][1] += rotation;\n      continue;\n    }\n\n    //block is below originBlock\n    if (this.location[i][0] === originBlock[0] && this.location[i][1] === originBlock[1] + 30) {\n      this.location[i][0] += rotation;\n      this.location[i][1] -= rotation;\n      continue;\n    }\n\n    //block is to right of originBlock\n    if (this.location[i][0] === originBlock[0] + 30 && this.location[i][1] === originBlock[1]) {\n      this.location[i][0] -= rotation;\n      this.location[i][1] -= rotation;\n      continue;\n    }\n\n    //DISTANCE BLOCK\n    //==============\n\n    //block is bottom left\n    if (this.location[i][0] === originBlock[0] - 30 && this.location[i][1] === originBlock[1] + 30) {\n      this.location[i][0] += rotation;\n      continue;\n    }\n\n    //block is bottom right\n    if (this.location[i][0] === originBlock[0] + 30 && this.location[i][1] === originBlock[1] + 30) {\n      this.location[i][1] -= rotation;\n      continue;\n    }\n\n    //block is top right\n    if (this.location[i][0] === originBlock[0] + 30 && this.location[i][1] === originBlock[1] - 30) {\n      this.location[i][0] -= rotation;\n      continue;\n    }\n\n    //block is top left\n    if (this.location[i][0] === originBlock[0] - 30 && this.location[i][1] === originBlock[1] - 30) {\n      this.location[i][1] += rotation;\n      continue;\n    }\n  }\n\n  for (let j = 0; j < this.location.length; j++) {\n    if (this.isSpaceTaken(this.location[j])) {\n      this.location = originalLocation;\n    }\n  }\n};\nLeftL.prototype.rotateRight = function (paused) {\n  if (paused) return;\n  const originBlock      = this.location[1];\n  const originalLocation = [[], [], [], []]\n  for (let k = 0; k < this.location.length; k++) {\n    for (let l = 0; l < 2; l++) {\n      originalLocation[k][l] = this.location[k][l];\n    }\n  }\n\n  for (let i = 0; i < this.location.length; i ++) {\n    let rotation;\n    switch (i) {\n      case 1:\n        rotation = 0;\n        break;\n      case 3:\n        rotation = 60;\n        break;\n      default:\n        rotation = 30;\n    }\n\n    //block is above originBlock\n    if (this.location[i][0] === originBlock[0] && this.location[i][1] === originBlock[1] - 30 ) {\n      this.location[i][0] += rotation;\n      this.location[i][1] += rotation;\n      continue;\n    }\n    //block is to right of originBlock\n    if (this.location[i][0] === originBlock[0] + 30 && this.location[i][1] === originBlock[1]) {\n      this.location[i][0] -= rotation;\n      this.location[i][1] += rotation;\n      continue;\n    }\n\n    //block is below originBlock\n    if (this.location[i][0] === originBlock[0] && this.location[i][1] === originBlock[1] + 30) {\n      this.location[i][0] -= rotation;\n      this.location[i][1] -= rotation;\n      continue;\n    }\n\n    //block is to left of originBlock\n    if (this.location[i][0] === originBlock[0] - 30 && this.location[i][1] === originBlock[1]) {\n      this.location[i][0] += rotation;\n      this.location[i][1] -= rotation;\n      continue;\n    }\n\n    //DISTANCE BLOCK\n    //==============\n\n    //block is bottom left\n    if (this.location[i][0] === originBlock[0] - 30 && this.location[i][1] === originBlock[1] + 30) {\n      this.location[i][1] -= rotation;\n      continue;\n    }\n\n    //block is top left\n    if (this.location[i][0] === originBlock[0] - 30 && this.location[i][1] === originBlock[1] - 30) {\n      this.location[i][0] += rotation;\n      continue;\n    }\n\n    //block is top right\n    if (this.location[i][0] === originBlock[0] + 30 && this.location[i][1] === originBlock[1] - 30) {\n      this.location[i][1] += rotation;\n      continue;\n    }\n\n    //block is bottom right\n    if (this.location[i][0] === originBlock[0] + 30 && this.location[i][1] === originBlock[1] + 30) {\n      this.location[i][0] -= rotation;\n      continue;\n    }\n  }\n\n  for (let j = 0; j < this.location.length; j++) {\n    if (this.isSpaceTaken(this.location[j])) {\n      this.location = originalLocation;\n    }\n  }\n};\nmodule.exports = LeftL;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./tetris_assets/js/pieces/left_l.js\n ** module id = 7\n ** module chunks = 0\n **/","const Piece          = require('./piece');\nconst colorConstants = require('./color_constants');\n\nconst RightL = function (board) {\n  Piece.call(this, board);\n  this.color = colorConstants.PURPLE;\n  this.location = [\n    [120, -120],\n    [120, -90],\n    [120, -60],\n    [150, -60]\n  ];\n  this.name = \"RightL\";\n}\n\nfunction Surrogate() {};\nSurrogate.prototype = Piece.prototype;\nRightL.prototype = new Surrogate();\nRightL.prototype.rotateRight = function(paused) {\n  if (paused) return;\n  const originBlock      = this.location[1];\n  const originalLocation = [[], [], [], []];\n  for (let k = 0; k < this.location.length; k++) {\n    for (let l = 0; l < 2; l++) {\n      originalLocation[k][l] = this.location[k][l];\n    }\n  }\n\n  for (let i = 0; i < this.location.length; i ++) {\n    let rotation;\n    switch (i) {\n      case 1:\n        rotation = 0;\n        break;\n      case 3:\n        rotation = 60;\n        break;\n      default:\n        rotation = 30;\n    }\n\n    //block is above originBlock\n    if (this.location[i][0] === originBlock[0] && this.location[i][1] === originBlock[1] - 30 ) {\n      this.location[i][0] -= rotation;\n      this.location[i][1] += rotation;\n      continue;\n    }\n\n    //block is to left of originBlock\n    if (this.location[i][0] === originBlock[0] - 30 && this.location[i][1] === originBlock[1]) {\n      this.location[i][0] += rotation;\n      this.location[i][1] += rotation;\n      continue;\n    }\n\n    //block is below originBlock\n    if (this.location[i][0] === originBlock[0] && this.location[i][1] === originBlock[1] + 30) {\n      this.location[i][0] += rotation;\n      this.location[i][1] -= rotation;\n      continue;\n    }\n\n    //block is to right of originBlock\n    if (this.location[i][0] === originBlock[0] + 30 && this.location[i][1] === originBlock[1]) {\n      this.location[i][0] -= rotation;\n      this.location[i][1] -= rotation;\n      continue;\n    }\n\n    //DISTANCE BLOCK\n    //==============\n\n    //block is bottom left\n    if (this.location[i][0] === originBlock[0] - 30 && this.location[i][1] === originBlock[1] + 30) {\n      this.location[i][1] -= rotation;\n      continue;\n    }\n\n    //block is bottom right\n    if (this.location[i][0] === originBlock[0] + 30 && this.location[i][1] === originBlock[1] + 30) {\n      this.location[i][0] -= rotation;\n      continue;\n    }\n\n    //block is top right\n    if (this.location[i][0] === originBlock[0] + 30 && this.location[i][1] === originBlock[1] - 30) {\n      this.location[i][1] += rotation;\n      continue;\n    }\n\n    //block is top left\n    if (this.location[i][0] === originBlock[0] - 30 && this.location[i][1] === originBlock[1] - 30) {\n      this.location[i][0] += rotation;\n      continue;\n    }\n  }\n\n  for (let j = 0; j < this.location.length; j++) {\n    if (this.isSpaceTaken(this.location[j])) {\n      this.location = originalLocation;\n    }\n  }\n};\nRightL.prototype.rotateLeft = function (paused) {\n  if (paused) return;\n  const originBlock      = this.location[1];\n  const originalLocation = [[], [], [], []]\n  for (let k = 0; k < this.location.length; k++) {\n    for (let l = 0; l < 2; l++) {\n      originalLocation[k][l] = this.location[k][l];\n    }\n  }\n\n  for (let i = 0; i < this.location.length; i ++) {\n    let rotation;\n    switch (i) {\n      case 1:\n        rotation = 0;\n        break;\n      case 3:\n        rotation = 60;\n        break;\n      default:\n        rotation = 30;\n    }\n\n    //block is above originBlock\n    if (this.location[i][0] === originBlock[0] && this.location[i][1] === originBlock[1] - 30 ) {\n      this.location[i][0] += rotation;\n      this.location[i][1] += rotation;\n      continue;\n    }\n    //block is to right of originBlock\n    if (this.location[i][0] === originBlock[0] + 30 && this.location[i][1] === originBlock[1]) {\n      this.location[i][0] -= rotation;\n      this.location[i][1] += rotation;\n      continue;\n    }\n\n    //block is below originBlock\n    if (this.location[i][0] === originBlock[0] && this.location[i][1] === originBlock[1] + 30) {\n      this.location[i][0] -= rotation;\n      this.location[i][1] -= rotation;\n      continue;\n    }\n\n    //block is to left of originBlock\n    if (this.location[i][0] === originBlock[0] - 30 && this.location[i][1] === originBlock[1]) {\n      this.location[i][0] += rotation;\n      this.location[i][1] -= rotation;\n      continue;\n    }\n\n    //DISTANCE BLOCK\n    //==============\n\n    //block is bottom left\n    if (this.location[i][0] === originBlock[0] - 30 && this.location[i][1] === originBlock[1] + 30) {\n      this.location[i][0] += rotation;\n      continue;\n    }\n\n    //block is top left\n    if (this.location[i][0] === originBlock[0] - 30 && this.location[i][1] === originBlock[1] - 30) {\n      this.location[i][1] += rotation;\n      continue;\n    }\n\n    //block is top right\n    if (this.location[i][0] === originBlock[0] + 30 && this.location[i][1] === originBlock[1] - 30) {\n      this.location[i][0] -= rotation;\n      continue;\n    }\n\n    //block is bottom right\n    if (this.location[i][0] === originBlock[0] + 30 && this.location[i][1] === originBlock[1] + 30) {\n      this.location[i][1] -= rotation;\n      continue;\n    }\n  }\n\n  for (let j = 0; j < this.location.length; j++) {\n    if (this.isSpaceTaken(this.location[j])) {\n      this.location = originalLocation;\n    }\n  }\n};\nmodule.exports = RightL;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./tetris_assets/js/pieces/right_l.js\n ** module id = 8\n ** module chunks = 0\n **/","const Piece          = require('./piece');\nconst colorConstants = require('./color_constants');\n\nconst LeftZ = function (board) {\n  Piece.call(this, board);\n  this.color = colorConstants.YELLOW;\n  this.location = [\n    [90, -90],\n    [120, -90],\n    [120, -60],\n    [150, -60]\n  ];\n  this.name = \"LeftZ\";\n}\n\nfunction Surrogate() {};\nSurrogate.prototype = Piece.prototype;\nLeftZ.prototype = new Surrogate();\nLeftZ.prototype.rotateLeft = function(paused) {\n  if (paused) return;\n  const originBlock      = this.location[1];\n  const originalLocation = [[], [], [], []];\n  for (let k = 0; k < this.location.length; k++) {\n    for (let l = 0; l < 2; l++) {\n      originalLocation[k][l] = this.location[k][l];\n    }\n  }\n\n  for (let i = 0; i < this.location.length; i ++) {\n    let rotation;\n    switch (i) {\n      case 1:\n        rotation = 0;\n        break;\n      case 3:\n        rotation = 60;\n        break;\n      default:\n        rotation = 30;\n    }\n\n    //block is above originBlock\n    if (this.location[i][0] === originBlock[0] && this.location[i][1] === originBlock[1] - 30 ) {\n      this.location[i][0] -= rotation;\n      this.location[i][1] += rotation;\n      continue;\n    }\n\n    //block is to left of originBlock\n    if (this.location[i][0] === originBlock[0] - 30 && this.location[i][1] === originBlock[1]) {\n      this.location[i][0] += rotation;\n      this.location[i][1] += rotation;\n      continue;\n    }\n\n    //block is below originBlock\n    if (this.location[i][0] === originBlock[0] && this.location[i][1] === originBlock[1] + 30) {\n      this.location[i][0] += rotation;\n      this.location[i][1] -= rotation;\n      continue;\n    }\n\n    //block is to right of originBlock\n    if (this.location[i][0] === originBlock[0] + 30 && this.location[i][1] === originBlock[1]) {\n      this.location[i][0] -= rotation;\n      this.location[i][1] -= rotation;\n      continue;\n    }\n\n    //DISTANCE BLOCK\n    //==============\n\n    //block is bottom left\n    if (this.location[i][0] === originBlock[0] - 30 && this.location[i][1] === originBlock[1] + 30) {\n      this.location[i][0] += rotation;\n      continue;\n    }\n\n    //block is bottom right\n    if (this.location[i][0] === originBlock[0] + 30 && this.location[i][1] === originBlock[1] + 30) {\n      this.location[i][1] -= rotation;\n      continue;\n    }\n\n    //block is top right\n    if (this.location[i][0] === originBlock[0] + 30 && this.location[i][1] === originBlock[1] - 30) {\n      this.location[i][0] -= rotation;\n      continue;\n    }\n\n    //block is top left\n    if (this.location[i][0] === originBlock[0] - 30 && this.location[i][1] === originBlock[1] - 30) {\n      this.location[i][1] += rotation;\n      continue;\n    }\n  }\n\n  for (let j = 0; j < this.location.length; j++) {\n    if (this.isSpaceTaken(this.location[j])) {\n      this.location = originalLocation;\n    }\n  }\n};\nLeftZ.prototype.rotateRight = function (paused) {\n  if (paused) return;\n  const originBlock      = this.location[1];\n  const originalLocation = [[], [], [], []]\n  for (let k = 0; k < this.location.length; k++) {\n    for (let l = 0; l < 2; l++) {\n      originalLocation[k][l] = this.location[k][l];\n    }\n  }\n\n  for (let i = 0; i < this.location.length; i ++) {\n    let rotation;\n    switch (i) {\n      case 1:\n        rotation = 0;\n        break;\n      case 3:\n        rotation = 60;\n        break;\n      default:\n        rotation = 30;\n    }\n\n    //block is above originBlock\n    if (this.location[i][0] === originBlock[0] && this.location[i][1] === originBlock[1] - 30 ) {\n      this.location[i][0] += rotation;\n      this.location[i][1] += rotation;\n      continue;\n    }\n    //block is to right of originBlock\n    if (this.location[i][0] === originBlock[0] + 30 && this.location[i][1] === originBlock[1]) {\n      this.location[i][0] -= rotation;\n      this.location[i][1] += rotation;\n      continue;\n    }\n\n    //block is below originBlock\n    if (this.location[i][0] === originBlock[0] && this.location[i][1] === originBlock[1] + 30) {\n      this.location[i][0] -= rotation;\n      this.location[i][1] -= rotation;\n      continue;\n    }\n\n    //block is to left of originBlock\n    if (this.location[i][0] === originBlock[0] - 30 && this.location[i][1] === originBlock[1]) {\n      this.location[i][0] += rotation;\n      this.location[i][1] -= rotation;\n      continue;\n    }\n\n    //DISTANCE BLOCK\n    //==============\n\n    //block is bottom left\n    if (this.location[i][0] === originBlock[0] - 30 && this.location[i][1] === originBlock[1] + 30) {\n      this.location[i][1] -= rotation;\n      continue;\n    }\n\n    //block is top left\n    if (this.location[i][0] === originBlock[0] - 30 && this.location[i][1] === originBlock[1] - 30) {\n      this.location[i][0] += rotation;\n      continue;\n    }\n\n    //block is top right\n    if (this.location[i][0] === originBlock[0] + 30 && this.location[i][1] === originBlock[1] - 30) {\n      this.location[i][1] += rotation;\n      continue;\n    }\n\n    //block is bottom right\n    if (this.location[i][0] === originBlock[0] + 30 && this.location[i][1] === originBlock[1] + 30) {\n      this.location[i][0] -= rotation;\n      continue;\n    }\n  }\n\n  for (let j = 0; j < this.location.length; j++) {\n    if (this.isSpaceTaken(this.location[j])) {\n      this.location = originalLocation;\n    }\n  }\n};\nmodule.exports = LeftZ;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./tetris_assets/js/pieces/left_z.js\n ** module id = 9\n ** module chunks = 0\n **/","const Piece          = require('./piece');\nconst colorConstants = require('./color_constants');\n\nconst RightZ = function (board) {\n  Piece.call(this, board);\n  this.color = colorConstants.ORANGE;\n  this.location = [\n    [150, -90],\n    [120, -90],\n    [120, -60],\n    [90, -60]\n  ];\n  this.name = \"RightZ\";\n}\n\nfunction Surrogate() {};\nSurrogate.prototype = Piece.prototype;\nRightZ.prototype = new Surrogate();\nRightZ.prototype.rotateRight = function(paused) {\n  if (paused) return;\n  const originBlock      = this.location[1];\n  const originalLocation = [[], [], [], []];\n  for (let k = 0; k < this.location.length; k++) {\n    for (let l = 0; l < 2; l++) {\n      originalLocation[k][l] = this.location[k][l];\n    }\n  }\n\n  for (let i = 0; i < this.location.length; i ++) {\n    let rotation;\n    switch (i) {\n      case 1:\n        rotation = 0;\n        break;\n      case 3:\n        rotation = 60;\n        break;\n      default:\n        rotation = 30;\n    }\n\n    //block is above originBlock\n    if (this.location[i][0] === originBlock[0] && this.location[i][1] === originBlock[1] - 30 ) {\n      this.location[i][0] -= rotation;\n      this.location[i][1] += rotation;\n      continue;\n    }\n\n    //block is to left of originBlock\n    if (this.location[i][0] === originBlock[0] - 30 && this.location[i][1] === originBlock[1]) {\n      this.location[i][0] += rotation;\n      this.location[i][1] += rotation;\n      continue;\n    }\n\n    //block is below originBlock\n    if (this.location[i][0] === originBlock[0] && this.location[i][1] === originBlock[1] + 30) {\n      this.location[i][0] += rotation;\n      this.location[i][1] -= rotation;\n      continue;\n    }\n\n    //block is to right of originBlock\n    if (this.location[i][0] === originBlock[0] + 30 && this.location[i][1] === originBlock[1]) {\n      this.location[i][0] -= rotation;\n      this.location[i][1] -= rotation;\n      continue;\n    }\n\n    //DISTANCE BLOCK\n    //==============\n\n    //block is bottom left\n    if (this.location[i][0] === originBlock[0] - 30 && this.location[i][1] === originBlock[1] + 30) {\n      this.location[i][0] += rotation;\n      continue;\n    }\n\n    //block is bottom right\n    if (this.location[i][0] === originBlock[0] + 30 && this.location[i][1] === originBlock[1] + 30) {\n      this.location[i][1] -= rotation;\n      continue;\n    }\n\n    //block is top right\n    if (this.location[i][0] === originBlock[0] + 30 && this.location[i][1] === originBlock[1] - 30) {\n      this.location[i][0] -= rotation;\n      continue;\n    }\n\n    //block is top left\n    if (this.location[i][0] === originBlock[0] - 30 && this.location[i][1] === originBlock[1] - 30) {\n      this.location[i][1] += rotation;\n      continue;\n    }\n  }\n\n  for (let j = 0; j < this.location.length; j++) {\n    if (this.isSpaceTaken(this.location[j])) {\n      this.location = originalLocation;\n    }\n  }\n};\nRightZ.prototype.rotateLeft = function (paused) {\n  if (paused) return;\n  const originBlock      = this.location[1];\n  const originalLocation = [[], [], [], []]\n  for (let k = 0; k < this.location.length; k++) {\n    for (let l = 0; l < 2; l++) {\n      originalLocation[k][l] = this.location[k][l];\n    }\n  }\n\n  for (let i = 0; i < this.location.length; i ++) {\n    let rotation;\n    switch (i) {\n      case 1:\n        rotation = 0;\n        break;\n      case 3:\n        rotation = 60;\n        break;\n      default:\n        rotation = 30;\n    }\n\n    //block is above originBlock\n    if (this.location[i][0] === originBlock[0] && this.location[i][1] === originBlock[1] - 30 ) {\n      this.location[i][0] += rotation;\n      this.location[i][1] += rotation;\n      continue;\n    }\n    //block is to right of originBlock\n    if (this.location[i][0] === originBlock[0] + 30 && this.location[i][1] === originBlock[1]) {\n      this.location[i][0] -= rotation;\n      this.location[i][1] += rotation;\n      continue;\n    }\n\n    //block is below originBlock\n    if (this.location[i][0] === originBlock[0] && this.location[i][1] === originBlock[1] + 30) {\n      this.location[i][0] -= rotation;\n      this.location[i][1] -= rotation;\n      continue;\n    }\n\n    //block is to left of originBlock\n    if (this.location[i][0] === originBlock[0] - 30 && this.location[i][1] === originBlock[1]) {\n      this.location[i][0] += rotation;\n      this.location[i][1] -= rotation;\n      continue;\n    }\n\n    //DISTANCE BLOCK\n    //==============\n\n    //block is bottom left\n    if (this.location[i][0] === originBlock[0] - 30 && this.location[i][1] === originBlock[1] + 30) {\n      this.location[i][1] -= rotation;\n      continue;\n    }\n\n    //block is top left\n    if (this.location[i][0] === originBlock[0] - 30 && this.location[i][1] === originBlock[1] - 30) {\n      this.location[i][0] += rotation;\n      continue;\n    }\n\n    //block is top right\n    if (this.location[i][0] === originBlock[0] + 30 && this.location[i][1] === originBlock[1] - 30) {\n      this.location[i][1] += rotation;\n      continue;\n    }\n\n    //block is bottom right\n    if (this.location[i][0] === originBlock[0] + 30 && this.location[i][1] === originBlock[1] + 30) {\n      this.location[i][0] -= rotation;\n      continue;\n    }\n  }\n\n  for (let j = 0; j < this.location.length; j++) {\n    if (this.isSpaceTaken(this.location[j])) {\n      this.location = originalLocation;\n    }\n  }\n};\nmodule.exports = RightZ;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./tetris_assets/js/pieces/right_z.js\n ** module id = 10\n ** module chunks = 0\n **/","const Piece          = require('./piece');\nconst colorConstants = require('./color_constants');\n\nconst Tee = function (board) {\n  Piece.call(this, board);\n  this.color = colorConstants.PINK;\n  this.location = [\n    [120, -90],\n    [120, -60],\n    [150, -60],\n    [90, -60]\n  ];\n  this.name = \"Tee\";\n}\n\nfunction Surrogate() {};\nSurrogate.prototype = Piece.prototype;\nTee.prototype = new Surrogate();\nTee.prototype.rotateLeft = function(paused) {\n  if (paused) return;\n  const originBlock      = this.location[1];\n  const originalLocation = [[], [], [], []];\n  for (let k = 0; k < this.location.length; k++) {\n    for (let l = 0; l < 2; l++) {\n      originalLocation[k][l] = this.location[k][l];\n    }\n  }\n\n  for (let i = 0; i < this.location.length; i ++) {\n    let rotation;\n    switch (i) {\n      case 1:\n        rotation = 0;\n        break;\n      default:\n        rotation = 30;\n    }\n\n    //block is above originBlock\n    if (this.location[i][0] === originBlock[0] && this.location[i][1] === originBlock[1] - 30 ) {\n      this.location[i][0] -= rotation;\n      this.location[i][1] += rotation;\n      continue;\n    }\n\n    //block is to left of originBlock\n    if (this.location[i][0] === originBlock[0] - 30 && this.location[i][1] === originBlock[1]) {\n      this.location[i][0] += rotation;\n      this.location[i][1] += rotation;\n      continue;\n    }\n\n    //block is below originBlock\n    if (this.location[i][0] === originBlock[0] && this.location[i][1] === originBlock[1] + 30) {\n      this.location[i][0] += rotation;\n      this.location[i][1] -= rotation;\n      continue;\n    }\n\n    //block is to right of originBlock\n    if (this.location[i][0] === originBlock[0] + 30 && this.location[i][1] === originBlock[1]) {\n      this.location[i][0] -= rotation;\n      this.location[i][1] -= rotation;\n      continue;\n    }\n  }\n\n  for (let j = 0; j < this.location.length; j++) {\n    if (this.isSpaceTaken(this.location[j])) {\n      this.location = originalLocation;\n    }\n  }\n};\nTee.prototype.rotateRight = function (paused) {\n  if (paused) return;\n  const originBlock      = this.location[1];\n  const originalLocation = [[], [], [], []]\n  for (let k = 0; k < this.location.length; k++) {\n    for (let l = 0; l < 2; l++) {\n      originalLocation[k][l] = this.location[k][l];\n    }\n  }\n\n  for (let i = 0; i < this.location.length; i ++) {\n    let rotation;\n    switch (i) {\n      case 1:\n        rotation = 0;\n        break;\n      default:\n        rotation = 30;\n    }\n\n    //block is above originBlock\n    if (this.location[i][0] === originBlock[0] && this.location[i][1] === originBlock[1] - 30 ) {\n      this.location[i][0] += rotation;\n      this.location[i][1] += rotation;\n      continue;\n    }\n    //block is to right of originBlock\n    if (this.location[i][0] === originBlock[0] + 30 && this.location[i][1] === originBlock[1]) {\n      this.location[i][0] -= rotation;\n      this.location[i][1] += rotation;\n      continue;\n    }\n\n    //block is below originBlock\n    if (this.location[i][0] === originBlock[0] && this.location[i][1] === originBlock[1] + 30) {\n      this.location[i][0] -= rotation;\n      this.location[i][1] -= rotation;\n      continue;\n    }\n\n    //block is to left of originBlock\n    if (this.location[i][0] === originBlock[0] - 30 && this.location[i][1] === originBlock[1]) {\n      this.location[i][0] += rotation;\n      this.location[i][1] -= rotation;\n      continue;\n    }\n  }\n\n  for (let j = 0; j < this.location.length; j++) {\n    if (this.isSpaceTaken(this.location[j])) {\n      this.location = originalLocation;\n    }\n  }\n};\nmodule.exports = Tee;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./tetris_assets/js/pieces/t.js\n ** module id = 11\n ** module chunks = 0\n **/","const GameView = function (game, ctx) {\n  this.ctx = ctx;\n  this.game = game;\n};\n\nGameView.MOVES = {\n  'a' : 'left',\n  's' : 'down',\n  'd' : 'right',\n};\n\n\nGameView.prototype.bindKeyHandlers = function () {\n  if (this.game.menu === 'main') {\n    key('s', () => { this.game.removeMainMenu(); });\n  }\n\n  Object.keys(GameView.MOVES).forEach( k => {\n    let direction = GameView.MOVES[k];\n    key(k, () => { this.game.pieces[this.game.pieces.length - 1].move(direction); });\n  });\n  key('r', () => { this.replay(); });\n  key('p', () => { this.game.togglePause(); });\n  key('q', () => { this.game.pieces[this.game.pieces.length - 1].rotateLeft(this.game.paused); });\n  key('e', () => { this.game.pieces[this.game.pieces.length - 1].rotateRight(this.game.paused); });\n};\n\nGameView.prototype.replay = function () {\n  if (this.game.menu !== 'over') return;\n  this.game.reset(this.ctx);\n};\n\nGameView.prototype.start = function () {\n  this.bindKeyHandlers();\n  this.lastTime = 0;\n  requestAnimationFrame(this.animate.bind(this));\n};\n\nGameView.prototype.animate = function(time) {\n  const timeDelta = time - this.lastTime;\n\n  this.game.step(timeDelta, this.ctx);\n  this.game.draw(this.ctx);\n  this.lastTime = time\n\n  requestAnimationFrame(this.animate.bind(this));\n};\n\nmodule.exports = GameView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./tetris_assets/js/game_view.js\n ** module id = 12\n ** module chunks = 0\n **/"],"sourceRoot":""}